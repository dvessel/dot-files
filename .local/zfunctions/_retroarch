#compdef retroarch

# zsh completions for 'retroarch'
local arguments

arguments=(
  {-h,--help}'[show this help message.]'
  {-v,--verbose}'[verbose logging.]'
  '--log-file[log messages to FILE.]'
  {-V,--version}'[show version.]'
  '--features[print available features compiled into program.]'
  '--menu[do not require content or libretro core to be loaded]'
  {-c,--config}'[path for config file.]'
  '--appendconfig[extra config files are loaded in, and take priority over]'
  '--subsystem[use a subsystem of the libretro core. Multiple content]'
  {-L,--libretro}'[path to libretro implementation. Overrides any config setting.]'
  '--scan[import content from path.]'
  {-f,--fullscreen}'[start the program in fullscreen regardless of config setting.]'
  '--set-shader[path to a shader (preset) that will be loaded each time content is loaded.]'
  {-N,--nodevice}'[disconnects controller device connected to PORT (1 to 16).]'
  {-A,--dualanalog}'[connect a DualAnalog controller to PORT (1 to 16).]'
  {-d,--device}'[connect a generic device into PORT of the device (1 to 16).]'
  {-M,--sram-mode}'[SRAM handling mode. MODE can be:]'
  {-H,--host}'[host netplay as user 1.]'
  {-C,--connect}'[connect to netplay server as user 2.]'
  '--port[port used to netplay. Default is 55435.]'
  '--mitm-session[MITM (relay) session ID to join.]'
  '--nick[picks a username (for use with netplay). Not mandatory.]'
  '--check-frames[check frames when using netplay.]'
  '--command[sends a command over UDP to an already running program process.]'
  {-P,--play-replay}'[playback a replay file.]'
  {-R,--record-replay}'[start recording a replay file from the beginning.]'
  '--eof-exit[exit upon reaching the end of the replay file.]'
  {-r,--record}'[path to record video file. Using mkv extension is recommended.]'
  '--recordconfig[path to settings used during recording.]'
  '--size[overrides output video size when recording.]'
  {-D,--detach}'[detach program from the running console. Not relevant for all platforms.]'
  '--max-frames[runs for the specified number of frames, then exits.]'
  {-U,--ups}'[specifies path for UPS patch that will be applied to content.]'
  '--bps[specifies path for BPS patch that will be applied to content.]'
  '--ips[specifies path for IPS patch that will be applied to content.]'
  '--xdelta[specifies path for Xdelta patch that will be applied to content.]'
  '--no-patch[disables all forms of content patching.]'
  '--max-frames-ss[takes a screenshot at the end of max-frames.]'
  '--max-frames-ss-path[path to save the screenshot to at the end of max-frames.]'
  '--accessibility[enables accessibility for blind users using text-to-speech.]'
  '--load-menu-on-error[open menu instead of quitting if specified core or content fails to load.]'
  {-e,--entryslot}'[slot from which to load an entry state.]'
  {-s,--save}'[path for save files (*.srm). (DEPRECATED, use --appendconfig and savefile_directory)]'
  {-S,--savestate}'[path for the save state files (*.state). (DEPRECATED, use --appendconfig and savestate_directory)]'
)

_arguments -s $arguments
