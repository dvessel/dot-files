#!/bin/zsh
#
# .zsh_plugins.txt - antidote plugins file
#

# The `.zsh_plugins.txt` file is used by antidote to configure Zsh bundles. Bundles are
# just a fancy way of referring to Zsh utilities, frameworks, prompts, or plugins.
#
# NOTE: Order matters in this file! Some bundles need to be last, and others are
# prerequisites. Read the documentation for the plugins you use to ensure proper
# configuration.
#
# Example: https://github.com/getantidote/zdotdir/blob/main/.zsh_plugins.txt

# With antidote, using Zephyr's completion plugin is recommended. This plugin is meant
# to be run near the TOP of your .zsh_plugins.txt file.

mattmc3/zephyr path:plugins/completion

# There are two ways to load prompts.
# - Add multiple prompt plugins to your `$fpath` with `kind:fpath` and then later in
#   your .zshrc run the Zsh built-in `prompt` to select the theme.
# - Or, just load one prompt like a regular plugin.

romkatv/powerlevel10k

# Plugins are the simplest kind of bundles. You can point to a full git URL, or if you
# assume GitHub.com, then you can use the user/repo shorthand.

mattmc3/zman
mattmc3/zephyr path:plugins/zfunctions
mattmc3/zephyr path:plugins/fishcmds
mattmc3/zephyr path:plugins/macos

# Oh-My-Zsh is a very popular Zsh framework. You might choose to use plugins from OMZ
# in your own config. Depending on which plugins you use, you may also need to include
# OMZ's entire "lib" directory. If you do this, be careful - "lib" configures a lot of
# very broad settings. If you are familiar with what you are doing, you may choose to
# only include parts of "lib".
#
#   # use all of lib
#   ohmyzsh/ohmyzsh path:lib
#   # -OR-, only use only the specific files we care about
#   ohmyzsh/ohmyzsh path:lib/clipboard.zsh
#
# https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins

ohmyzsh/ohmyzsh path:plugins/direnv
ohmyzsh/ohmyzsh path:plugins/extract
ohmyzsh/ohmyzsh path:plugins/fancy-ctrl-z
ohmyzsh/ohmyzsh path:plugins/qrcode
ohmyzsh/ohmyzsh path:plugins/rsync
ohmyzsh/ohmyzsh path:plugins/transfer
ohmyzsh/ohmyzsh path:plugins/universalarchive

# fzf-tab needs to be loaded before plugins which will wrap widgets, such as
# zsh-autosuggestions or fast-syntax-highlighting!!

Aloxaf/fzf-tab

# In general, you should not defer plugins unless you know for sure they properly
# support deferred loading, and there are no adverse side-effects. However, for
# certain plugins, this can greatly increase your zsh startup speed.
# https://github.com/romkatv/zsh-defer#Caveats

zsh-users/zsh-syntax-highlighting kind:defer

# These popular core plugins should be loaded at the end

zsh-users/zsh-autosuggestions
zsh-users/zsh-history-substring-search
